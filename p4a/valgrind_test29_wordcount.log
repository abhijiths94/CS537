==13498== Memcheck, a memory error detector
==13498== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13498== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==13498== Command: ./wordcount_m1r1 /u/c/s/cs537-1/tests/p4a/simple/inputs/file1m.in
==13498== Parent PID: 13497
==13498== 
==13498== Thread 2:
==13498== Conditional jump or move depends on uninitialised value(s)
==13498==    at 0x4E45FAF: pthread_mutex_lock (pthread_mutex_lock.c:69)
==13498==    by 0x1094EF: MR_EmitToReducer (mapreduce.c:226)
==13498==    by 0x108EAE: Map (wordcount.c:34)
==13498==    by 0x10930A: mapper_thread (mapreduce.c:150)
==13498==    by 0x4E436DA: start_thread (pthread_create.c:463)
==13498==    by 0x517C88E: clone (clone.S:95)
==13498== 
==13498== Conditional jump or move depends on uninitialised value(s)
==13498==    at 0x4E45FC1: pthread_mutex_lock (pthread_mutex_lock.c:73)
==13498==    by 0x1094EF: MR_EmitToReducer (mapreduce.c:226)
==13498==    by 0x108EAE: Map (wordcount.c:34)
==13498==    by 0x10930A: mapper_thread (mapreduce.c:150)
==13498==    by 0x4E436DA: start_thread (pthread_create.c:463)
==13498==    by 0x517C88E: clone (clone.S:95)
==13498== 
==13498== Conditional jump or move depends on uninitialised value(s)
==13498==    at 0x4E46012: pthread_mutex_lock (pthread_mutex_lock.c:78)
==13498==    by 0x1094EF: MR_EmitToReducer (mapreduce.c:226)
==13498==    by 0x108EAE: Map (wordcount.c:34)
==13498==    by 0x10930A: mapper_thread (mapreduce.c:150)
==13498==    by 0x4E436DA: start_thread (pthread_create.c:463)
==13498==    by 0x517C88E: clone (clone.S:95)
==13498== 
==13498== Conditional jump or move depends on uninitialised value(s)
==13498==    at 0x4E46030: pthread_mutex_lock (pthread_mutex_lock.c:79)
==13498==    by 0x1094EF: MR_EmitToReducer (mapreduce.c:226)
==13498==    by 0x108EAE: Map (wordcount.c:34)
==13498==    by 0x10930A: mapper_thread (mapreduce.c:150)
==13498==    by 0x4E436DA: start_thread (pthread_create.c:463)
==13498==    by 0x517C88E: clone (clone.S:95)
==13498== 
==13498== Conditional jump or move depends on uninitialised value(s)
==13498==    at 0x109507: MR_EmitToReducer (mapreduce.c:228)
==13498==    by 0x108EAE: Map (wordcount.c:34)
==13498==    by 0x10930A: mapper_thread (mapreduce.c:150)
==13498==    by 0x4E436DA: start_thread (pthread_create.c:463)
==13498==    by 0x517C88E: clone (clone.S:95)
==13498== 
==13498== Conditional jump or move depends on uninitialised value(s)
==13498==    at 0x4E477B4: __pthread_mutex_unlock_usercnt (pthread_mutex_unlock.c:39)
==13498==    by 0x4E477B4: pthread_mutex_unlock (pthread_mutex_unlock.c:345)
==13498==    by 0x1095E0: MR_EmitToReducer (mapreduce.c:284)
==13498==    by 0x108EAE: Map (wordcount.c:34)
==13498==    by 0x10930A: mapper_thread (mapreduce.c:150)
==13498==    by 0x4E436DA: start_thread (pthread_create.c:463)
==13498==    by 0x517C88E: clone (clone.S:95)
==13498== 
==13498== Conditional jump or move depends on uninitialised value(s)
==13498==    at 0x4E477B8: __pthread_mutex_unlock_usercnt (pthread_mutex_unlock.c:43)
==13498==    by 0x4E477B8: pthread_mutex_unlock (pthread_mutex_unlock.c:345)
==13498==    by 0x1095E0: MR_EmitToReducer (mapreduce.c:284)
==13498==    by 0x108EAE: Map (wordcount.c:34)
==13498==    by 0x10930A: mapper_thread (mapreduce.c:150)
==13498==    by 0x4E436DA: start_thread (pthread_create.c:463)
==13498==    by 0x517C88E: clone (clone.S:95)
==13498== 
==13498== Conditional jump or move depends on uninitialised value(s)
==13498==    at 0x1091BC: reducer_get_next (mapreduce.c:103)
==13498==    by 0x108F69: Reduce (wordcount.c:47)
==13498==    by 0x109434: reducer_thread (mapreduce.c:199)
==13498==    by 0x4E436DA: start_thread (pthread_create.c:463)
==13498==    by 0x517C88E: clone (clone.S:95)
==13498== 
==13498== Conditional jump or move depends on uninitialised value(s)
==13498==    at 0x109478: reducer_thread (mapreduce.c:201)
==13498==    by 0x4E436DA: start_thread (pthread_create.c:463)
==13498==    by 0x517C88E: clone (clone.S:95)
==13498== 
==13498== 
==13498== HEAP SUMMARY:
==13498==     in use at exit: 0 bytes in 0 blocks
==13498==   total heap usage: 375,652 allocs, 375,652 frees, 4,216,663 bytes allocated
==13498== 
==13498== All heap blocks were freed -- no leaks are possible
==13498== 
==13498== For counts of detected and suppressed errors, rerun with: -v
==13498== Use --track-origins=yes to see where uninitialised values come from
==13498== ERROR SUMMARY: 750071 errors from 9 contexts (suppressed: 0 from 0)
